# Generated by Django 3.1.5 on 2021-01-27 14:00

from django.db import migrations
import django_db_views.migration_functions
import django_db_views.operations


class Migration(migrations.Migration):

    dependencies = [
        ('api_services', '0001_initial'),
    ]

    operations = [
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT\n        row_number() over () AS id, game_id, team_id, SUM(player_score) AS team_score\n    FROM\n    (\n        SELECT\n            asps.game_id, asps.player_score, asp.team_id\n        FROM\n        (\n            SELECT game_id, player_id, SUM(points) AS player_score\n            FROM api_services_playerscore\n            GROUP BY player_id, game_id\n            ) asps INNER JOIN api_services_player AS asp ON asps.player_id=asp.user_id\n    ) tps GROUP BY game_id, team_id', 'api_services_gamescoresdbview', engine='django.db.backends.sqlite3'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_gamescoresdbview', engine='django.db.backends.sqlite3'),
            atomic=False,
        ),
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT\n        row_number() over () AS id, game_id, team_id, SUM(player_score) AS team_score\n    FROM\n    (\n        SELECT\n            asps.game_id, asps.player_score, asp.team_id\n        FROM\n        (\n            SELECT game_id, player_id, SUM(points) AS player_score\n            FROM api_services_playerscore\n            GROUP BY player_id, game_id\n            ) asps INNER JOIN api_services_player AS asp ON asps.player_id=asp.user_id\n    ) tps GROUP BY game_id, team_id', 'api_services_gamescoresdbview', engine='django.db.backends.postgresql'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_gamescoresdbview', engine='django.db.backends.postgresql'),
            atomic=False,
        ),
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT\n        apl.player_id, COALESCE(apl.player_average, 0.0) AS player_average,  apisp.team_id\n    FROM\n    (\n        SELECT\n            asp.user_id AS player_id, a.player_average AS player_average\n        FROM api_services_player AS asp\n        LEFT JOIN\n        (\n            SELECT\n                pid AS player_id, ROUND(AVG(player_score),2) AS player_average\n            FROM\n            (\n                SELECT player_id AS pid, SUM(points) AS player_score\n                FROM api_services_playerscore\n                GROUP BY player_id, game_id\n            ) player_totals GROUP BY pid\n        ) a ON asp.user_id=a.player_id\n    ) apl INNER JOIN api_services_player AS apisp ON apl.player_id=apisp.user_id', 'api_services_playeraveragedbview', engine='django.db.backends.sqlite3'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_playeraveragedbview', engine='django.db.backends.sqlite3'),
            atomic=False,
        ),
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT\n        apl.player_id, COALESCE(apl.player_average, 0.0) AS player_average,  apisp.team_id\n    FROM\n    (\n        SELECT\n            asp.user_id AS player_id, a.player_average AS player_average\n        FROM api_services_player AS asp\n        LEFT JOIN\n        (\n            SELECT\n                pid AS player_id, ROUND(AVG(player_score),2) AS player_average\n            FROM\n            (\n                SELECT player_id AS pid, SUM(points) AS player_score\n                FROM api_services_playerscore\n                GROUP BY player_id, game_id\n            ) player_totals GROUP BY pid\n        ) a ON asp.user_id=a.player_id\n    ) apl INNER JOIN api_services_player AS apisp ON apl.player_id=apisp.user_id', 'api_services_playeraveragedbview', engine='django.db.backends.postgresql'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_playeraveragedbview', engine='django.db.backends.postgresql'),
            atomic=False,
        ),
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT \n        row_number() over () AS id, player_totals.pid AS player_id, pl.team_id,  player_totals.player_score \n    FROM \n    (\n        SELECT player_id AS pid, SUM(points) AS player_score \n        FROM api_services_playerscore \n        GROUP BY player_id, game_id\n    ) player_totals INNER JOIN api_services_player AS pl ON player_totals.pid=pl.user_id', 'api_services_teamplayerscoresdbview', engine='django.db.backends.sqlite3'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_teamplayerscoresdbview', engine='django.db.backends.sqlite3'),
            atomic=False,
        ),
        django_db_views.operations.ViewRunPython(
            code=django_db_views.migration_functions.ForwardViewMigration('SELECT \n        row_number() over () AS id, player_totals.pid AS player_id, pl.team_id,  player_totals.player_score \n    FROM \n    (\n        SELECT player_id AS pid, SUM(points) AS player_score \n        FROM api_services_playerscore \n        GROUP BY player_id, game_id\n    ) player_totals INNER JOIN api_services_player AS pl ON player_totals.pid=pl.user_id', 'api_services_teamplayerscoresdbview', engine='django.db.backends.postgresql'),
            reverse_code=django_db_views.migration_functions.BackwardViewMigration('', 'api_services_teamplayerscoresdbview', engine='django.db.backends.postgresql'),
            atomic=False,
        ),
    ]
